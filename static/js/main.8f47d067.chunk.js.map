{"version":3,"sources":["components/pagination.js","components/InputBox.js","components/ListItem.js","components/friendList.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","state","updateState","currentPage","itemsPerPage","pageNo","pageNumbers","i","Math","ceil","items","length","push","handlePageClick","e","Number","target","id","renderPageNumbers","map","number","className","document","getElementById","onClick","InputBox","type","value","inputData","onChange","placeholder","onKeyPress","charCode","values","addItem","maxLength","ListItem","getUpdatedItems","filter","item","index","friendName","toLowerCase","includes","elem","icon","faStar","fav","key","elemId","itemArr","slice","splice","unshift","spliced","addRemoveFavourite","faTrashAlt","updatedItems","currentItem","deleteItem","FriendList","indexOfLastFriend","indexOfFirstFriend","useState","setState","setCurrentItems","useEffect","updatedStateValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8f47d067.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css'\r\n\r\nconst Pagination = ({state, updateState, currentPage, itemsPerPage, pageNo}) => {\r\n\r\n    pageNo = currentPage;\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(state.items.length / itemsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    const handlePageClick = (e) => {\r\n        pageNo = Number(e.target.id);\r\n        updateState({...state, currentPage: pageNo});\r\n    }\r\n\r\n    // Page Number Component\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n        return (\r\n          <div id={number}\r\n            className={\"pages-div \" + ((number === pageNo && document.getElementById(number)) ? 'page-div-clicked':'')}\r\n            key={number}\r\n            onClick={handlePageClick}\r\n          >\r\n            {number}\r\n          </div>\r\n        );\r\n      });\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"page-numbers\">\r\n            {renderPageNumbers}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nfunction InputBox({ state, updateState }) {\r\n\r\n    // Add a friend to list\r\n    const addItem = (e) => {\r\n        if (e.charCode === 13 && state.inputData !== \"\") {\r\n            const values = { \"id\": state.items.length, \"friendName\": state.inputData, \"fav\": 0 };\r\n            updateState({ ...state, items: [...state.items, values], inputData: '' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={state.inputData}\r\n                onChange={(e) => updateState({ ...state, inputData: e.target.value, currentPage: state.currentPage })}\r\n                placeholder=\"Enter your friend's name\"\r\n                onKeyPress={(e) => addItem(e)}\r\n                maxLength=\"50\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputBox;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction ListItem({ state, updateState, getUpdatedItems, itemsPerPage }) {\r\n\r\n    // Delete a Friend from list\r\n    const deleteItem = (key, elemId) => {\r\n        const updatedItems = state.items.filter((elem, index) => {\r\n            return elem.id !== elemId;\r\n        });\r\n        let currentItem = getUpdatedItems(updatedItems);\r\n        updateState({ ...state, items: updatedItems });\r\n        if (currentItem.length === 0 && state.currentPage !== 1) {\r\n            const currentPage = state.currentPage - 1;\r\n            updateState({ ...state, items: updatedItems, currentPage: currentPage });\r\n        }\r\n    }\r\n\r\n    // Add a Friend to Favourite\r\n    const addRemoveFavourite = (key, elemId) => {\r\n        let itemArr = state.items.slice();\r\n        for (let i = 0; i < itemArr.length; i++) {\r\n            let item = itemArr[i];\r\n            if (item.id === elemId) {\r\n                if (item.fav === 0) {\r\n                    item.fav = 1;\r\n                    itemArr.splice(i, 1);\r\n                    itemArr.unshift(item);\r\n                    break;\r\n                } else {\r\n                    item.fav = 0;\r\n                    let spliced = itemArr.splice(i, 1);\r\n                    itemArr.push(spliced[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        updateState({ ...state, items: itemArr });\r\n    }\r\n\r\n    return (\r\n        state.items.filter((item, index) => {\r\n            if (state.inputData === \"\") {\r\n                return ((index >= (state.currentPage * itemsPerPage) - itemsPerPage && index < state.currentPage * itemsPerPage));\r\n            } else if (item.friendName.toLowerCase().includes(state.inputData.toLowerCase())) {\r\n                return item;\r\n            }\r\n        }).map((elem, index) => {\r\n            return (\r\n                <div className=\"eachItem\" key={index}>\r\n                    <h3>{elem.friendName}</h3>\r\n                    <div className=\"todo-btn\">\r\n                        <FontAwesomeIcon icon={faStar} id={'star' + index} className={'fa-star' + ' ' + (elem.fav === 0 ? 'star-empty' : 'star-filled')} onClick={() => addRemoveFavourite(index, elem.id)} />\r\n                        <FontAwesomeIcon icon={faTrashAlt} className=\"fa-trash-alt\" onClick={() => deleteItem(index, elem.id)} />\r\n                    </div>\r\n                    <div className=\"friend-text\"><br />is your friend</div>\r\n                </div>\r\n            )\r\n        })\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport '../App.css'\r\nimport Pagination from './pagination';\r\nimport InputBox from './InputBox';\r\nimport ListItem from './ListItem';\r\n\r\nconst FriendList = () => {\r\n\r\n    let indexOfLastFriend, indexOfFirstFriend, currentItem;\r\n    const [state, setState] = useState({\r\n        inputData: '',\r\n        items: [],\r\n        currentPage: 1\r\n    });\r\n    const [currentItems, setCurrentItems] = useState([]);\r\n    const itemsPerPage = 4;\r\n\r\n    useEffect(() => {\r\n        currentItem = getUpdatedItems(state.items);\r\n        setCurrentItems(currentItem);\r\n    }, [state, state.items, state.currentPage]);\r\n\r\n    // To Update the CurrentItems array\r\n    const getUpdatedItems = (items) => {\r\n        // Logic for Updating Friends Lists\r\n        indexOfLastFriend = state.currentPage * itemsPerPage;\r\n        indexOfFirstFriend = indexOfLastFriend - itemsPerPage;\r\n        let currentItem = items.slice(indexOfFirstFriend, indexOfLastFriend);\r\n        return currentItem;\r\n    }\r\n\r\n    // To update the State from other Components\r\n    const updateState = (updatedStateValue) => {\r\n        setState(updatedStateValue)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <div className=\"header-div\">\r\n                        <h3>Friends List</h3>\r\n                    </div>\r\n                    <div className=\"addItems\">\r\n                        <InputBox state={state} updateState={updateState} />\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <ListItem state={state} getUpdatedItems={getUpdatedItems} updateState={updateState} itemsPerPage={itemsPerPage} />\r\n                    </div>\r\n                    <Pagination state={state} currentPage={state.currentPage} updateState={updateState} itemsPerPage={itemsPerPage} currentPage={state.currentPage} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FriendList;","import './App.css';\nimport FriendList from './components/friendList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <FriendList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}